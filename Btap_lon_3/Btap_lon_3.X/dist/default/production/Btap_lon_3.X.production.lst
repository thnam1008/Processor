

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Sun Mar 17 13:02:46 2024

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 5 "Btap_lon_3.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 5 "Btap_lon_3.c"
    45  2007  FF7A               	dw 0xFFFE & 0xFFFB & 0xFFFF & 0xFFFF & 0xFFFF & 0xFF7F & 0xFFFF & 0xFFFF & 0xFFFF ;#
    46                           	FNCALL	_main,_lcd_init
    47                           	FNCALL	_main,_serial_init
    48                           	FNCALL	_main,_cmd
    49                           	FNCALL	_lcd_init,_cmd
    50                           	FNROOT	_main
    51                           	FNCALL	_ser,_tx
    52                           	FNCALL	_ser,i1_cmd
    53                           	FNCALL	_ser,_show
    54                           	FNCALL	_ser,_dat
    55                           	FNCALL	_show,_dat
    56                           	FNCALL	intlevel1,_ser
    57                           	global	intlevel1
    58                           	FNROOT	intlevel1
    59                           	global	_i
    60                           	global	_z
    61                           	global	_INTCON
    62                           psect	text241,local,class=CODE,delta=2
    63                           global __ptext241
    64  0000                     __ptext241:
    65  000B                     _INTCON	set	11
    66                           	global	_PORTD
    67  0008                     _PORTD	set	8
    68                           	global	_RCREG
    69  001A                     _RCREG	set	26
    70                           	global	_RCSTA
    71  0018                     _RCSTA	set	24
    72                           	global	_TXREG
    73  0019                     _TXREG	set	25
    74                           	global	_RC0
    75  0038                     _RC0	set	56
    76                           	global	_RC1
    77  0039                     _RC1	set	57
    78                           	global	_RC2
    79  003A                     _RC2	set	58
    80                           	global	_RCIF
    81  0065                     _RCIF	set	101
    82                           	global	_TXIF
    83  0064                     _TXIF	set	100
    84                           	global	_PIE1
    85  008C                     _PIE1	set	140
    86                           	global	_SPBRG
    87  0099                     _SPBRG	set	153
    88                           	global	_TRISD
    89  0088                     _TRISD	set	136
    90                           	global	_TXSTA
    91  0098                     _TXSTA	set	152
    92                           	global	_TRISC0
    93  0438                     _TRISC0	set	1080
    94                           	global	_TRISC1
    95  0439                     _TRISC1	set	1081
    96                           	global	_TRISC2
    97  043A                     _TRISC2	set	1082
    98                           	global	_TRISC6
    99  043E                     _TRISC6	set	1086
   100                           	global	_TRISC7
   101  043F                     _TRISC7	set	1087
   102                           psect	strings,class=STRING,delta=2
   103                           global __pstrings
   104  0015                     __pstrings:
   105                           ;	global	stringdir,stringtab,__stringbase
   106  0015                     stringtab:
   107                           ;	String table - string pointers are 1 byte each
   108  0015                     stringcode:stringdir:
      + 0015                     stringdir:	
   109  0015  3000               movlw high(stringdir)
   110  0016  008A               movwf pclath
   111  0017  0804               movf fsr,w
   112  0018  0A84               incf fsr
   113  0019  0782               	addwf pc
   114  001A                     __stringbase:
   115  001A  3400               	retlw	0
   116                           psect	strings
   117                           	
   118  001B                     STR_1:	
   119  001B  3453               	retlw	83	;'S'
   120  001C  3465               	retlw	101	;'e'
   121  001D  3472               	retlw	114	;'r'
   122  001E  3469               	retlw	105	;'i'
   123  001F  3461               	retlw	97	;'a'
   124  0020  346C               	retlw	108	;'l'
   125  0021  3420               	retlw	32	;' '
   126  0022  3469               	retlw	105	;'i'
   127  0023  346E               	retlw	110	;'n'
   128  0024  3474               	retlw	116	;'t'
   129  0025  3465               	retlw	101	;'e'
   130  0026  3472               	retlw	114	;'r'
   131  0027  3472               	retlw	114	;'r'
   132  0028  3475               	retlw	117	;'u'
   133  0029  3470               	retlw	112	;'p'
   134  002A  3474               	retlw	116	;'t'
   135  002B  3400               	retlw	0
   136                           psect	strings
   137                           	
   138  002C                     STR_2:	
   139  002C  3420               	retlw	32	;' '
   140  002D  3420               	retlw	32	;' '
   141  002E  344B               	retlw	75	;'K'
   142  002F  3465               	retlw	101	;'e'
   143  0030  3479               	retlw	121	;'y'
   144  0031  3420               	retlw	32	;' '
   145  0032  343A               	retlw	58	;':'
   146  0033  3420               	retlw	32	;' '
   147  0034  3400               	retlw	0
   148                           psect	strings
   149                           	file	"C:\Users\TRANHA~1\AppData\Local\Temp\s4eo."
   150                           	line	#
   151                           psect cinit,class=CODE,delta=2
   152                           global start_initialization
   153  01E0                     start_initialization:
   154                           
   155                           psect	bssCOMMON,class=COMMON,space=1
   156                           global __pbssCOMMON
   157  0079                     __pbssCOMMON:
   158  0079                     _i:
   159  0079                            ds      2
   160                           
   161  007B                     _z:
   162  007B                            ds      2
   163                           
   164                           ; Clear objects allocated to COMMON
   165                           psect cinit,class=CODE,delta=2
   166  01E0  01F9               	clrf	((__pbssCOMMON)+0)&07Fh
   167  01E1  01FA               	clrf	((__pbssCOMMON)+1)&07Fh
   168  01E2  01FB               	clrf	((__pbssCOMMON)+2)&07Fh
   169  01E3  01FC               	clrf	((__pbssCOMMON)+3)&07Fh
   170                           psect cinit,class=CODE,delta=2
   171                           global end_of_initialization
   172                           
   173                           ;End of C runtime variable initialization code
   174                           
   175  01E4                     end_of_initialization:
   176  01E4  0183               clrf status
   177  01E5  120A  118A  2974   ljmp _main	;jump to C main() function
   178                           psect	cstackCOMMON,class=COMMON,space=1
   179                           global __pcstackCOMMON
   180  0070                     __pcstackCOMMON:
   181                           	global	?_cmd
   182  0070                     ?_cmd:	; 0 bytes @ 0x0
   183                           	global	?_serial_init
   184  0070                     ?_serial_init:	; 0 bytes @ 0x0
   185                           	global	?_tx
   186  0070                     ?_tx:	; 0 bytes @ 0x0
   187                           	global	??_tx
   188  0070                     ??_tx:	; 0 bytes @ 0x0
   189                           	global	?_lcd_init
   190  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   191                           	global	?_dat
   192  0070                     ?_dat:	; 0 bytes @ 0x0
   193                           	global	??_dat
   194  0070                     ??_dat:	; 0 bytes @ 0x0
   195                           	global	?_show
   196  0070                     ?_show:	; 0 bytes @ 0x0
   197                           	global	?_main
   198  0070                     ?_main:	; 0 bytes @ 0x0
   199                           	global	?_ser
   200  0070                     ?_ser:	; 0 bytes @ 0x0
   201                           	global	?i1_cmd
   202  0070                     ?i1_cmd:	; 0 bytes @ 0x0
   203                           	global	??i1_cmd
   204  0070                     ??i1_cmd:	; 0 bytes @ 0x0
   205                           	global	tx@dat
   206  0070                     tx@dat:	; 1 bytes @ 0x0
   207                           	global	dat@b
   208  0070                     dat@b:	; 1 bytes @ 0x0
   209                           	global	i1cmd@a
   210  0070                     i1cmd@a:	; 1 bytes @ 0x0
   211  0070                     	ds	1
   212                           	global	??_show
   213  0071                     ??_show:	; 0 bytes @ 0x1
   214  0071                     	ds	1
   215                           	global	show@s
   216  0072                     show@s:	; 1 bytes @ 0x2
   217  0072                     	ds	1
   218                           	global	??_ser
   219  0073                     ??_ser:	; 0 bytes @ 0x3
   220  0073                     	ds	5
   221                           	global	ser@a
   222  0078                     ser@a:	; 1 bytes @ 0x8
   223  0078                     	ds	1
   224                           psect	cstackBANK0,class=BANK0,space=1
   225                           global __pcstackBANK0
   226  0020                     __pcstackBANK0:
   227                           	global	??_cmd
   228  0020                     ??_cmd:	; 0 bytes @ 0x0
   229                           	global	??_serial_init
   230  0020                     ??_serial_init:	; 0 bytes @ 0x0
   231                           	global	cmd@a
   232  0020                     cmd@a:	; 1 bytes @ 0x0
   233  0020                     	ds	1
   234                           	global	??_lcd_init
   235  0021                     ??_lcd_init:	; 0 bytes @ 0x1
   236                           	global	??_main
   237  0021                     ??_main:	; 0 bytes @ 0x1
   238  0021                     	ds	1
   239 ;;Data sizes: Strings 26, constant 0, data 0, bss 4, persistent 0 stack 0
   240 ;;Auto spaces:   Size  Autos    Used
   241 ;; COMMON          14      9      13
   242 ;; BANK0           80      2       2
   243 ;; BANK1           80      0       0
   244 ;; BANK3           96      0       0
   245 ;; BANK2           96      0       0
   246                           
   247 ;;
   248 ;; Pointer list with targets:
   249                           
   250 ;; show@s	PTR unsigned char  size(1) Largest target is 17
   251 ;;		 -> STR_2(CODE[9]), STR_1(CODE[17]), 
   252 ;;
   253                           
   254                           
   255 ;;
   256 ;; Critical Paths under _main in COMMON
   257 ;;
   258 ;;   None.
   259 ;;
   260 ;; Critical Paths under _ser in COMMON
   261 ;;
   262 ;;   _ser->_show
   263 ;;   _show->_dat
   264 ;;
   265 ;; Critical Paths under _main in BANK0
   266 ;;
   267 ;;   _main->_cmd
   268 ;;   _lcd_init->_cmd
   269 ;;
   270 ;; Critical Paths under _ser in BANK0
   271 ;;
   272 ;;   None.
   273 ;;
   274 ;; Critical Paths under _main in BANK1
   275 ;;
   276 ;;   None.
   277 ;;
   278 ;; Critical Paths under _ser in BANK1
   279 ;;
   280 ;;   None.
   281 ;;
   282 ;; Critical Paths under _main in BANK3
   283 ;;
   284 ;;   None.
   285 ;;
   286 ;; Critical Paths under _ser in BANK3
   287 ;;
   288 ;;   None.
   289 ;;
   290 ;; Critical Paths under _main in BANK2
   291 ;;
   292 ;;   None.
   293 ;;
   294 ;; Critical Paths under _ser in BANK2
   295 ;;
   296 ;;   None.
   297                           
   298 ;;
   299 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   300 ;;
   301                           
   302 ;;
   303 ;;Call Graph Tables:
   304 ;;
   305 ;; ---------------------------------------------------------------------------------
   306 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   307 ;; ---------------------------------------------------------------------------------
   308 ;; (0) _main                                                 1     1      0      44
   309 ;;                                              1 BANK0      1     1      0
   310 ;;                           _lcd_init
   311 ;;                        _serial_init
   312 ;;                                _cmd
   313 ;; ---------------------------------------------------------------------------------
   314 ;; (1) _lcd_init                                             0     0      0      22
   315 ;;                                _cmd
   316 ;; ---------------------------------------------------------------------------------
   317 ;; (1) _cmd                                                  1     1      0      22
   318 ;;                                              0 BANK0      1     1      0
   319 ;; ---------------------------------------------------------------------------------
   320 ;; (1) _serial_init                                          0     0      0       0
   321 ;; ---------------------------------------------------------------------------------
   322 ;; Estimated maximum stack depth 1
   323 ;; ---------------------------------------------------------------------------------
   324 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   325 ;; ---------------------------------------------------------------------------------
   326 ;; (3) _ser                                                  6     6      0     193
   327 ;;                                              3 COMMON     6     6      0
   328 ;;                                 _tx
   329 ;;                              i1_cmd
   330 ;;                               _show
   331 ;;                                _dat
   332 ;; ---------------------------------------------------------------------------------
   333 ;; (4) _show                                                 2     2      0      45
   334 ;;                                              1 COMMON     2     2      0
   335 ;;                                _dat
   336 ;; ---------------------------------------------------------------------------------
   337 ;; (4) i1_cmd                                                1     1      0      73
   338 ;;                                              0 COMMON     1     1      0
   339 ;; ---------------------------------------------------------------------------------
   340 ;; (4) _dat                                                  1     1      0      15
   341 ;;                                              0 COMMON     1     1      0
   342 ;; ---------------------------------------------------------------------------------
   343 ;; (4) _tx                                                   1     1      0      15
   344 ;;                                              0 COMMON     1     1      0
   345 ;; ---------------------------------------------------------------------------------
   346 ;; Estimated maximum stack depth 4
   347 ;; ---------------------------------------------------------------------------------
   348                           
   349 ;; Call Graph Graphs:
   350                           
   351 ;; _main (ROOT)
   352 ;;   _lcd_init
   353 ;;     _cmd
   354 ;;   _serial_init
   355 ;;   _cmd
   356 ;;
   357 ;; _ser (ROOT)
   358 ;;   _tx
   359 ;;   i1_cmd
   360 ;;   _show
   361 ;;     _dat
   362 ;;   _dat
   363 ;;
   364                           
   365 ;; Address spaces:
   366                           
   367 ;;Name               Size   Autos  Total    Cost      Usage
   368 ;;BITCOMMON            E      0       0       0        0.0%
   369 ;;EEDATA             100      0       0       0        0.0%
   370 ;;NULL                 0      0       0       0        0.0%
   371 ;;CODE                 0      0       0       0        0.0%
   372 ;;COMMON               E      9       D       1       92.9%
   373 ;;BITSFR0              0      0       0       1        0.0%
   374 ;;SFR0                 0      0       0       1        0.0%
   375 ;;BITSFR1              0      0       0       2        0.0%
   376 ;;SFR1                 0      0       0       2        0.0%
   377 ;;STACK                0      0       8       2        0.0%
   378 ;;ABS                  0      0       F       3        0.0%
   379 ;;BITBANK0            50      0       0       4        0.0%
   380 ;;BITSFR3              0      0       0       4        0.0%
   381 ;;SFR3                 0      0       0       4        0.0%
   382 ;;BANK0               50      2       2       5        2.5%
   383 ;;BITSFR2              0      0       0       5        0.0%
   384 ;;SFR2                 0      0       0       5        0.0%
   385 ;;BITBANK1            50      0       0       6        0.0%
   386 ;;BANK1               50      0       0       7        0.0%
   387 ;;BITBANK3            60      0       0       8        0.0%
   388 ;;BANK3               60      0       0       9        0.0%
   389 ;;BITBANK2            60      0       0      10        0.0%
   390 ;;BANK2               60      0       0      11        0.0%
   391 ;;DATA                 0      0      17      12        0.0%
   392                           
   393                           	global	_main
   394                           psect	maintext,global,class=CODE,delta=2
   395                           global __pmaintext
   396  0174                     __pmaintext:
   397                           
   398 ;; *************** function _main *****************
   399 ;; Defined at:
   400 ;;		line 14 in file "Btap_lon_3.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;		None
   405 ;; Return value:  Size  Location     Type
   406 ;;		None               void
   407 ;; Registers used:
   408 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : 17F/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   414 ;;      Params:         0       0       0       0       0
   415 ;;      Locals:         0       0       0       0       0
   416 ;;      Temps:          0       1       0       0       0
   417 ;;      Totals:         0       1       0       0       0
   418 ;;Total ram usage:        1 bytes
   419 ;; Hardware stack levels required when called:    5
   420 ;; This function calls:
   421 ;;		_lcd_init
   422 ;;		_serial_init
   423 ;;		_cmd
   424 ;; This function is called by:
   425 ;;		Startup code after reset
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           psect	maintext
   429                           	file	"Btap_lon_3.c"
   430                           	line	14
   431                           	global	__size_of_main
   432  0023                     	__size_of_main	equ	__end_of_main-_main
   433                           	
   434  0174                     _main:	
   435                           	opt	stack 3
   436                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   437                           	line	15
   438                           	
   439  0174                     l2108:	
   440                           ;Btap_lon_3.c: 15: TRISD=0;
   441  0174  1683               	bsf	status, 5	;RP0=1, select bank1
   442  0175  1303               	bcf	status, 6	;RP1=0, select bank1
   443  0176  0188               	clrf	(136)^080h	;volatile
   444                           	line	16
   445                           	
   446  0177                     l2110:	
   447                           ;Btap_lon_3.c: 16: INTCON|=0b11000000;
   448  0177  30C0               	movlw	(0C0h)
   449  0178  1283               	bcf	status, 5	;RP0=0, select bank0
   450  0179  1303               	bcf	status, 6	;RP1=0, select bank0
   451  017A  00A1               	movwf	(??_main+0)+0
   452  017B  0821               	movf	(??_main+0)+0,w
   453  017C  048B               	iorwf	(11),f	;volatile
   454                           	line	17
   455                           	
   456  017D                     l2112:	
   457                           ;Btap_lon_3.c: 17: PIE1=0b00100000;
   458  017D  3020               	movlw	(020h)
   459  017E  1683               	bsf	status, 5	;RP0=1, select bank1
   460  017F  1303               	bcf	status, 6	;RP1=0, select bank1
   461  0180  008C               	movwf	(140)^080h	;volatile
   462                           	line	18
   463                           	
   464  0181                     l2114:	
   465                           ;Btap_lon_3.c: 18: lcd_init();
   466  0181  120A  118A  20AA   	fcall	_lcd_init
              120A  118A         
   467                           	line	19
   468                           	
   469  0186                     l2116:	
   470                           ;Btap_lon_3.c: 19: serial_init();
   471  0186  120A  118A  21B8   	fcall	_serial_init
              120A  118A         
   472  018B  298C               	goto	l2118
   473                           	line	20
   474                           ;Btap_lon_3.c: 20: while(1) {
   475                           	
   476  018C                     l731:	
   477                           	line	21
   478                           	
   479  018C                     l2118:	
   480                           ;Btap_lon_3.c: 21: cmd(0x01);
   481  018C  3001               	movlw	(01h)
   482  018D  120A  118A  20E4   	fcall	_cmd
              120A  118A         
   483  0192  298C               	goto	l2118
   484                           	line	22
   485                           	
   486  0193                     l732:	
   487                           	line	20
   488  0193  298C               	goto	l2118
   489                           	
   490  0194                     l733:	
   491                           	line	23
   492                           	
   493  0194                     l734:	
   494                           	global	start
   495  0194  120A  118A  2812   	ljmp	start
   496                           	opt stack 0
   497                           GLOBAL	__end_of_main
   498  0197                     	__end_of_main:
   499 ;; =============== function _main ends ============
   500                           
   501                           	signat	_main,88
   502                           	global	_lcd_init
   503                           psect	text242,local,class=CODE,delta=2
   504                           global __ptext242
   505  00AA                     __ptext242:
   506                           
   507 ;; *************** function _lcd_init *****************
   508 ;; Defined at:
   509 ;;		line 15 in file "lcd.h"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;		None
   514 ;; Return value:  Size  Location     Type
   515 ;;		None               void
   516 ;; Registers used:
   517 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   523 ;;      Params:         0       0       0       0       0
   524 ;;      Locals:         0       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0
   526 ;;      Totals:         0       0       0       0       0
   527 ;;Total ram usage:        0 bytes
   528 ;; Hardware stack levels used:    1
   529 ;; Hardware stack levels required when called:    4
   530 ;; This function calls:
   531 ;;		_cmd
   532 ;; This function is called by:
   533 ;;		_main
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           psect	text242
   537                           	file	"lcd.h"
   538                           	line	15
   539                           	global	__size_of_lcd_init
   540  003A                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
   541                           	
   542  00AA                     _lcd_init:	
   543                           	opt	stack 3
   544                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   545                           	line	16
   546                           	
   547  00AA                     l2104:	
   548                           ;lcd.h: 16: TRISC0=TRISC1=TRISC2=TRISD=0;
   549  00AA  1683               	bsf	status, 5	;RP0=1, select bank1
   550  00AB  1303               	bcf	status, 6	;RP1=0, select bank1
   551  00AC  0188               	clrf	(136)^080h	;volatile
   552  00AD  1808               	btfsc	((136)^080h),0	;volatile
   553  00AE  28B0               	goto	u2461
   554  00AF  28B4               	goto	u2460
   555                           	
   556  00B0                     u2461:
   557  00B0  1683               	bsf	status, 5	;RP0=1, select bank1
   558  00B1  1303               	bcf	status, 6	;RP1=0, select bank1
   559  00B2  1507               	bsf	(1082/8)^080h,(1082)&7
   560  00B3  28B7               	goto	u2474
   561  00B4                     u2460:
   562  00B4  1683               	bsf	status, 5	;RP0=1, select bank1
   563  00B5  1303               	bcf	status, 6	;RP1=0, select bank1
   564  00B6  1107               	bcf	(1082/8)^080h,(1082)&7
   565  00B7                     u2474:
   566  00B7  1907               	btfsc	(1082/8)^080h,(1082)&7
   567  00B8  28BA               	goto	u2471
   568  00B9  28BE               	goto	u2470
   569                           	
   570  00BA                     u2471:
   571  00BA  1683               	bsf	status, 5	;RP0=1, select bank1
   572  00BB  1303               	bcf	status, 6	;RP1=0, select bank1
   573  00BC  1487               	bsf	(1081/8)^080h,(1081)&7
   574  00BD  28C1               	goto	u2484
   575  00BE                     u2470:
   576  00BE  1683               	bsf	status, 5	;RP0=1, select bank1
   577  00BF  1303               	bcf	status, 6	;RP1=0, select bank1
   578  00C0  1087               	bcf	(1081/8)^080h,(1081)&7
   579  00C1                     u2484:
   580  00C1  1887               	btfsc	(1081/8)^080h,(1081)&7
   581  00C2  28C4               	goto	u2481
   582  00C3  28C8               	goto	u2480
   583                           	
   584  00C4                     u2481:
   585  00C4  1683               	bsf	status, 5	;RP0=1, select bank1
   586  00C5  1303               	bcf	status, 6	;RP1=0, select bank1
   587  00C6  1407               	bsf	(1080/8)^080h,(1080)&7
   588  00C7  28CB               	goto	u2494
   589  00C8                     u2480:
   590  00C8  1683               	bsf	status, 5	;RP0=1, select bank1
   591  00C9  1303               	bcf	status, 6	;RP1=0, select bank1
   592  00CA  1007               	bcf	(1080/8)^080h,(1080)&7
   593  00CB                     u2494:
   594                           	line	17
   595                           	
   596  00CB                     l2106:	
   597                           ;lcd.h: 17: cmd(0x38);
   598  00CB  3038               	movlw	(038h)
   599  00CC  120A  118A  20E4   	fcall	_cmd
              120A  118A         
   600                           	line	18
   601                           ;lcd.h: 18: cmd(0x0e);
   602  00D1  300E               	movlw	(0Eh)
   603  00D2  120A  118A  20E4   	fcall	_cmd
              120A  118A         
   604                           	line	19
   605                           ;lcd.h: 19: cmd(0x06);
   606  00D7  3006               	movlw	(06h)
   607  00D8  120A  118A  20E4   	fcall	_cmd
              120A  118A         
   608                           	line	20
   609                           ;lcd.h: 20: cmd(0x80);
   610  00DD  3080               	movlw	(080h)
   611  00DE  120A  118A  20E4   	fcall	_cmd
              120A  118A         
   612                           	line	21
   613                           	
   614  00E3                     l712:	
   615  00E3  0008               	return
   616                           	opt stack 0
   617                           GLOBAL	__end_of_lcd_init
   618  00E4                     	__end_of_lcd_init:
   619 ;; =============== function _lcd_init ends ============
   620                           
   621                           	signat	_lcd_init,88
   622                           	global	_cmd
   623                           psect	text243,local,class=CODE,delta=2
   624                           global __ptext243
   625  00E4                     __ptext243:
   626                           
   627 ;; *************** function _cmd *****************
   628 ;; Defined at:
   629 ;;		line 24 in file "lcd.h"
   630 ;; Parameters:    Size  Location     Type
   631 ;;  a               1    wreg     unsigned char 
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  a               1    0[BANK0 ] unsigned char 
   634 ;; Return value:  Size  Location     Type
   635 ;;		None               void
   636 ;; Registers used:
   637 ;;		wreg, status,2, btemp+1
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   643 ;;      Params:         0       0       0       0       0
   644 ;;      Locals:         0       1       0       0       0
   645 ;;      Temps:          0       0       0       0       0
   646 ;;      Totals:         0       1       0       0       0
   647 ;;Total ram usage:        1 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; Hardware stack levels required when called:    3
   650 ;; This function calls:
   651 ;;		Nothing
   652 ;; This function is called by:
   653 ;;		_lcd_init
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           psect	text243
   658                           	file	"lcd.h"
   659                           	line	24
   660                           	global	__size_of_cmd
   661  0030                     	__size_of_cmd	equ	__end_of_cmd-_cmd
   662                           	
   663  00E4                     _cmd:	
   664                           	opt	stack 4
   665                           ; Regs used in _cmd: [wreg+status,2+btemp+1]
   666                           ;cmd@a stored from wreg
   667  00E4  1283               	bcf	status, 5	;RP0=0, select bank0
   668  00E5  1303               	bcf	status, 6	;RP1=0, select bank0
   669  00E6  00A0               	movwf	(cmd@a)
   670                           	line	25
   671                           	
   672  00E7                     l2036:	
   673                           ;lcd.h: 25: PORTD=a;
   674  00E7  0820               	movf	(cmd@a),w
   675  00E8  0088               	movwf	(8)	;volatile
   676                           	line	26
   677                           	
   678  00E9                     l2038:	
   679                           ;lcd.h: 26: RC0=0;
   680  00E9  1007               	bcf	(56/8),(56)&7
   681                           	line	27
   682                           	
   683  00EA                     l2040:	
   684                           ;lcd.h: 27: RC1=0;
   685  00EA  1087               	bcf	(57/8),(57)&7
   686                           	line	28
   687                           	
   688  00EB                     l2042:	
   689                           ;lcd.h: 28: RC2=1;
   690  00EB  1507               	bsf	(58/8),(58)&7
   691                           	line	29
   692                           	
   693  00EC                     l2044:	
   694                           ;lcd.h: 29: for(i=0;i<1000;i++);
   695  00EC  01F9               	clrf	(_i)
   696  00ED  01FA               	clrf	(_i+1)
   697                           	
   698  00EE                     l2046:	
   699  00EE  087A               	movf	(_i+1),w
   700  00EF  3A80               	xorlw	80h
   701  00F0  00FF               	movwf	btemp+1
   702  00F1  3083               	movlw	(high(03E8h))^80h
   703  00F2  027F               	subwf	btemp+1,w
   704  00F3  1D03               	skipz
   705  00F4  28F7               	goto	u2385
   706  00F5  30E8               	movlw	low(03E8h)
   707  00F6  0279               	subwf	(_i),w
   708  00F7                     u2385:
   709                           
   710  00F7  1C03               	skipc
   711  00F8  28FA               	goto	u2381
   712  00F9  28FB               	goto	u2380
   713  00FA                     u2381:
   714  00FA  28FD               	goto	l2050
   715  00FB                     u2380:
   716  00FB  2910               	goto	l716
   717                           	
   718  00FC                     l2048:	
   719  00FC  2910               	goto	l716
   720                           	
   721  00FD                     l715:	
   722                           	
   723  00FD                     l2050:	
   724  00FD  3001               	movlw	low(01h)
   725  00FE  07F9               	addwf	(_i),f
   726  00FF  1803               	skipnc
   727  0100  0AFA               	incf	(_i+1),f
   728  0101  3000               	movlw	high(01h)
   729  0102  07FA               	addwf	(_i+1),f
   730                           	
   731  0103                     l2052:	
   732  0103  087A               	movf	(_i+1),w
   733  0104  3A80               	xorlw	80h
   734  0105  00FF               	movwf	btemp+1
   735  0106  3083               	movlw	(high(03E8h))^80h
   736  0107  027F               	subwf	btemp+1,w
   737  0108  1D03               	skipz
   738  0109  290C               	goto	u2395
   739  010A  30E8               	movlw	low(03E8h)
   740  010B  0279               	subwf	(_i),w
   741  010C                     u2395:
   742                           
   743  010C  1C03               	skipc
   744  010D  290F               	goto	u2391
   745  010E  2910               	goto	u2390
   746  010F                     u2391:
   747  010F  28FD               	goto	l2050
   748  0110                     u2390:
   749                           	
   750  0110                     l716:	
   751                           	line	30
   752                           ;lcd.h: 30: RC2=0;
   753  0110  1283               	bcf	status, 5	;RP0=0, select bank0
   754  0111  1303               	bcf	status, 6	;RP1=0, select bank0
   755  0112  1107               	bcf	(58/8),(58)&7
   756                           	line	31
   757                           	
   758  0113                     l717:	
   759  0113  0008               	return
   760                           	opt stack 0
   761                           GLOBAL	__end_of_cmd
   762  0114                     	__end_of_cmd:
   763 ;; =============== function _cmd ends ============
   764                           
   765                           	signat	_cmd,4216
   766                           	global	_serial_init
   767                           psect	text244,local,class=CODE,delta=2
   768                           global __ptext244
   769  01B8                     __ptext244:
   770                           
   771 ;; *************** function _serial_init *****************
   772 ;; Defined at:
   773 ;;		line 7 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\include\serial.h"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;		None               void
   780 ;; Registers used:
   781 ;;		wreg
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   787 ;;      Params:         0       0       0       0       0
   788 ;;      Locals:         0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0
   790 ;;      Totals:         0       0       0       0       0
   791 ;;Total ram usage:        0 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    3
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_main
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           psect	text244
   801                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\include\serial.h"
   802                           	line	7
   803                           	global	__size_of_serial_init
   804  001C                     	__size_of_serial_init	equ	__end_of_serial_init-_serial_init
   805                           	
   806  01B8                     _serial_init:	
   807                           	opt	stack 4
   808                           ; Regs used in _serial_init: [wreg]
   809                           	line	8
   810                           	
   811  01B8                     l2030:	
   812                           ;serial.h: 8: TRISC6=TRISC7=1;
   813  01B8  1683               	bsf	status, 5	;RP0=1, select bank1
   814  01B9  1303               	bcf	status, 6	;RP1=0, select bank1
   815  01BA  1787               	bsf	(1087/8)^080h,(1087)&7
   816  01BB  1B87               	btfsc	(1087/8)^080h,(1087)&7
   817  01BC  29BE               	goto	u2361
   818  01BD  29C2               	goto	u2360
   819                           	
   820  01BE                     u2361:
   821  01BE  1683               	bsf	status, 5	;RP0=1, select bank1
   822  01BF  1303               	bcf	status, 6	;RP1=0, select bank1
   823  01C0  1707               	bsf	(1086/8)^080h,(1086)&7
   824  01C1  29C5               	goto	u2374
   825  01C2                     u2360:
   826  01C2  1683               	bsf	status, 5	;RP0=1, select bank1
   827  01C3  1303               	bcf	status, 6	;RP1=0, select bank1
   828  01C4  1307               	bcf	(1086/8)^080h,(1086)&7
   829  01C5                     u2374:
   830                           	line	9
   831                           	
   832  01C5                     l2032:	
   833                           ;serial.h: 9: TXSTA=0b00100010;
   834  01C5  3022               	movlw	(022h)
   835  01C6  0098               	movwf	(152)^080h	;volatile
   836                           	line	10
   837                           ;serial.h: 10: RCSTA=0b10010000;
   838  01C7  3090               	movlw	(090h)
   839  01C8  1283               	bcf	status, 5	;RP0=0, select bank0
   840  01C9  1303               	bcf	status, 6	;RP1=0, select bank0
   841  01CA  0098               	movwf	(24)	;volatile
   842                           	line	11
   843                           ;serial.h: 11: SPBRG=17;
   844  01CB  3011               	movlw	(011h)
   845  01CC  1683               	bsf	status, 5	;RP0=1, select bank1
   846  01CD  1303               	bcf	status, 6	;RP1=0, select bank1
   847  01CE  0099               	movwf	(153)^080h	;volatile
   848                           	line	12
   849                           	
   850  01CF                     l2034:	
   851                           ;serial.h: 12: TXIF=RCIF=0;
   852  01CF  1283               	bcf	status, 5	;RP0=0, select bank0
   853  01D0  1303               	bcf	status, 6	;RP1=0, select bank0
   854  01D1  128C               	bcf	(101/8),(101)&7
   855  01D2  120C               	bcf	(100/8),(100)&7
   856                           	line	13
   857                           	
   858  01D3                     l691:	
   859  01D3  0008               	return
   860                           	opt stack 0
   861                           GLOBAL	__end_of_serial_init
   862  01D4                     	__end_of_serial_init:
   863 ;; =============== function _serial_init ends ============
   864                           
   865                           	signat	_serial_init,88
   866                           	global	_ser
   867                           psect	text245,local,class=CODE,delta=2
   868                           global __ptext245
   869  0035                     __ptext245:
   870                           
   871 ;; *************** function _ser *****************
   872 ;; Defined at:
   873 ;;		line 26 in file "Btap_lon_3.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;  a               1    8[COMMON] unsigned char 
   878 ;; Return value:  Size  Location     Type
   879 ;;		None               void
   880 ;; Registers used:
   881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   887 ;;      Params:         0       0       0       0       0
   888 ;;      Locals:         1       0       0       0       0
   889 ;;      Temps:          5       0       0       0       0
   890 ;;      Totals:         6       0       0       0       0
   891 ;;Total ram usage:        6 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    2
   894 ;; This function calls:
   895 ;;		_tx
   896 ;;		i1_cmd
   897 ;;		_show
   898 ;;		_dat
   899 ;; This function is called by:
   900 ;;		Interrupt level 1
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           psect	text245
   904                           	file	"Btap_lon_3.c"
   905                           	line	26
   906                           	global	__size_of_ser
   907  0075                     	__size_of_ser	equ	__end_of_ser-_ser
   908                           	
   909  0035                     _ser:	
   910                           	opt	stack 3
   911                           ; Regs used in _ser: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   912                           psect	intentry,class=CODE,delta=2
   913                           global __pintentry
   914  0004                     __pintentry:
   915                           global interrupt_function
   916  0004                     interrupt_function:
   917                           	global saved_w
   918  007E                     	saved_w	set	btemp+0
   919  0004  00FE               	movwf	saved_w
   920  0005  0E03               	swapf	status,w
   921  0006  00F4               	movwf	(??_ser+1)
   922  0007  0804               	movf	fsr0,w
   923  0008  00F5               	movwf	(??_ser+2)
   924  0009  080A               	movf	pclath,w
   925  000A  00F6               	movwf	(??_ser+3)
   926  000B  1283               	bcf	status, 5	;RP0=0, select bank0
   927  000C  1303               	bcf	status, 6	;RP1=0, select bank0
   928  000D  087F               	movf	btemp+1,w
   929  000E  00F7               	movwf	(??_ser+4)
   930  000F  120A  118A  2835   	ljmp	_ser
   931                           psect	text245
   932                           	line	27
   933                           	
   934  0035                     i1l2054:	
   935                           ;Btap_lon_3.c: 27: unsigned char a = RCREG;
   936  0035  081A               	movf	(26),w	;volatile
   937  0036  00F3               	movwf	(??_ser+0)+0
   938  0037  0873               	movf	(??_ser+0)+0,w
   939  0038  00F8               	movwf	(ser@a)
   940                           	line	28
   941                           	
   942  0039                     i1l2056:	
   943                           ;Btap_lon_3.c: 28: tx(a);
   944  0039  0878               	movf	(ser@a),w
   945  003A  120A  118A  21D4   	fcall	_tx
              120A  118A         
   946                           	line	29
   947                           	
   948  003F                     i1l2058:	
   949                           ;Btap_lon_3.c: 29: cmd(0x80);
   950  003F  3080               	movlw	(080h)
   951  0040  120A  118A  2114   	fcall	i1_cmd
              120A  118A         
   952                           	line	30
   953                           	
   954  0045                     i1l2060:	
   955                           ;Btap_lon_3.c: 30: show("Serial interrupt");
   956  0045  3001               	movlw	((STR_1-__stringbase))&0ffh
   957  0046  120A  118A  2197   	fcall	_show
              120A  118A         
   958                           	line	31
   959                           	
   960  004B                     i1l2062:	
   961                           ;Btap_lon_3.c: 31: cmd(0xc0);
   962  004B  30C0               	movlw	(0C0h)
   963  004C  120A  118A  2114   	fcall	i1_cmd
              120A  118A         
   964                           	line	32
   965                           	
   966  0051                     i1l2064:	
   967                           ;Btap_lon_3.c: 32: show("  Key : ");
   968  0051  3012               	movlw	((STR_2-__stringbase))&0ffh
   969  0052  120A  118A  2197   	fcall	_show
              120A  118A         
   970                           	line	33
   971                           	
   972  0057                     i1l2066:	
   973                           ;Btap_lon_3.c: 33: cmd(0xc8);
   974  0057  30C8               	movlw	(0C8h)
   975  0058  120A  118A  2114   	fcall	i1_cmd
              120A  118A         
   976                           	line	34
   977                           	
   978  005D                     i1l2068:	
   979                           ;Btap_lon_3.c: 34: dat(a);
   980  005D  0878               	movf	(ser@a),w
   981  005E  120A  118A  2144   	fcall	_dat
              120A  118A         
   982                           	line	35
   983                           	
   984  0063                     i1l2070:	
   985                           ;Btap_lon_3.c: 35: for(z=0;z<=50000;z++);for(z=0;z<=50000;z++);
   986  0063  01FB               	clrf	(_z)
   987  0064  01FC               	clrf	(_z+1)
   988                           	
   989  0065                     i1l2072:	
   990  0065  30C3               	movlw	high(0C351h)
   991  0066  027C               	subwf	(_z+1),w
   992  0067  3051               	movlw	low(0C351h)
   993  0068  1903               	skipnz
   994  0069  027B               	subwf	(_z),w
   995  006A  1C03               	skipc
   996  006B  286D               	goto	u240_21
   997  006C  286E               	goto	u240_20
   998  006D                     u240_21:
   999  006D  2870               	goto	i1l2076
  1000  006E                     u240_20:
  1001  006E  2880               	goto	i1l2078
  1002                           	
  1003  006F                     i1l2074:	
  1004  006F  2880               	goto	i1l2078
  1005                           	
  1006  0070                     i1l737:	
  1007                           	
  1008  0070                     i1l2076:	
  1009  0070  3001               	movlw	low(01h)
  1010  0071  07FB               	addwf	(_z),f
  1011  0072  1803               	skipnc
  1012  0073  0AFC               	incf	(_z+1),f
  1013  0074  3000               	movlw	high(01h)
  1014  0075  07FC               	addwf	(_z+1),f
  1015  0076  30C3               	movlw	high(0C351h)
  1016  0077  027C               	subwf	(_z+1),w
  1017  0078  3051               	movlw	low(0C351h)
  1018  0079  1903               	skipnz
  1019  007A  027B               	subwf	(_z),w
  1020  007B  1C03               	skipc
  1021  007C  287E               	goto	u241_21
  1022  007D  287F               	goto	u241_20
  1023  007E                     u241_21:
  1024  007E  2870               	goto	i1l2076
  1025  007F                     u241_20:
  1026  007F  2880               	goto	i1l2078
  1027                           	
  1028  0080                     i1l738:	
  1029                           	
  1030  0080                     i1l2078:	
  1031  0080  01FB               	clrf	(_z)
  1032  0081  01FC               	clrf	(_z+1)
  1033                           	
  1034  0082                     i1l2080:	
  1035  0082  30C3               	movlw	high(0C351h)
  1036  0083  027C               	subwf	(_z+1),w
  1037  0084  3051               	movlw	low(0C351h)
  1038  0085  1903               	skipnz
  1039  0086  027B               	subwf	(_z),w
  1040  0087  1C03               	skipc
  1041  0088  288A               	goto	u242_21
  1042  0089  288B               	goto	u242_20
  1043  008A                     u242_21:
  1044  008A  288D               	goto	i1l2084
  1045  008B                     u242_20:
  1046  008B  289D               	goto	i1l741
  1047                           	
  1048  008C                     i1l2082:	
  1049  008C  289D               	goto	i1l741
  1050                           	
  1051  008D                     i1l739:	
  1052                           	
  1053  008D                     i1l2084:	
  1054  008D  3001               	movlw	low(01h)
  1055  008E  07FB               	addwf	(_z),f
  1056  008F  1803               	skipnc
  1057  0090  0AFC               	incf	(_z+1),f
  1058  0091  3000               	movlw	high(01h)
  1059  0092  07FC               	addwf	(_z+1),f
  1060  0093  30C3               	movlw	high(0C351h)
  1061  0094  027C               	subwf	(_z+1),w
  1062  0095  3051               	movlw	low(0C351h)
  1063  0096  1903               	skipnz
  1064  0097  027B               	subwf	(_z),w
  1065  0098  1C03               	skipc
  1066  0099  289B               	goto	u243_21
  1067  009A  289C               	goto	u243_20
  1068  009B                     u243_21:
  1069  009B  288D               	goto	i1l2084
  1070  009C                     u243_20:
  1071  009C  289D               	goto	i1l741
  1072                           	
  1073  009D                     i1l740:	
  1074                           	line	36
  1075                           	
  1076  009D                     i1l741:	
  1077  009D  0877               	movf	(??_ser+4),w
  1078  009E  1283               	bcf	status, 5	;RP0=0, select bank0
  1079  009F  1303               	bcf	status, 6	;RP1=0, select bank0
  1080  00A0  00FF               	movwf	btemp+1
  1081  00A1  0876               	movf	(??_ser+3),w
  1082  00A2  008A               	movwf	pclath
  1083  00A3  0875               	movf	(??_ser+2),w
  1084  00A4  0084               	movwf	fsr0
  1085  00A5  0E74               	swapf	(??_ser+1)^0FFFFFF80h,w
  1086  00A6  0083               	movwf	status
  1087  00A7  0EFE               	swapf	saved_w,f
  1088  00A8  0E7E               	swapf	saved_w,w
  1089  00A9  0009               	retfie
  1090                           	opt stack 0
  1091                           GLOBAL	__end_of_ser
  1092  00AA                     	__end_of_ser:
  1093 ;; =============== function _ser ends ============
  1094                           
  1095                           	signat	_ser,88
  1096                           	global	_show
  1097                           psect	text246,local,class=CODE,delta=2
  1098                           global __ptext246
  1099  0197                     __ptext246:
  1100                           
  1101 ;; *************** function _show *****************
  1102 ;; Defined at:
  1103 ;;		line 44 in file "lcd.h"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  s               1    wreg     PTR unsigned char 
  1106 ;;		 -> STR_2(9), STR_1(17), 
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;  s               1    2[COMMON] PTR unsigned char 
  1109 ;;		 -> STR_2(9), STR_1(17), 
  1110 ;; Return value:  Size  Location     Type
  1111 ;;		None               void
  1112 ;; Registers used:
  1113 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1119 ;;      Params:         0       0       0       0       0
  1120 ;;      Locals:         1       0       0       0       0
  1121 ;;      Temps:          1       0       0       0       0
  1122 ;;      Totals:         2       0       0       0       0
  1123 ;;Total ram usage:        2 bytes
  1124 ;; Hardware stack levels used:    1
  1125 ;; Hardware stack levels required when called:    1
  1126 ;; This function calls:
  1127 ;;		_dat
  1128 ;; This function is called by:
  1129 ;;		_ser
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           psect	text246
  1133                           	file	"lcd.h"
  1134                           	line	44
  1135                           	global	__size_of_show
  1136  0021                     	__size_of_show	equ	__end_of_show-_show
  1137                           	
  1138  0197                     _show:	
  1139                           	opt	stack 3
  1140                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1141                           ;show@s stored from wreg
  1142  0197  00F2               	movwf	(show@s)
  1143                           	line	45
  1144                           	
  1145  0198                     i1l1172:	
  1146                           ;lcd.h: 45: while(*s)
  1147  0198  29AA               	goto	i1l1178
  1148                           	
  1149  0199                     i1l726:	
  1150                           	line	47
  1151                           	
  1152  0199                     i1l1174:	
  1153                           ;lcd.h: 46: {
  1154                           ;lcd.h: 47: dat(*s++);
  1155  0199  0872               	movf	(show@s),w
  1156  019A  0084               	movwf	fsr0
  1157  019B  120A  118A  2015   	fcall	stringdir
              120A  118A         
  1158  01A0  120A  118A  2144   	fcall	_dat
              120A  118A         
  1159                           	
  1160  01A5                     i1l1176:	
  1161  01A5  3001               	movlw	(01h)
  1162  01A6  00F1               	movwf	(??_show+0)+0
  1163  01A7  0871               	movf	(??_show+0)+0,w
  1164  01A8  07F2               	addwf	(show@s),f
  1165  01A9  29AA               	goto	i1l1178
  1166                           	line	48
  1167                           	
  1168  01AA                     i1l725:	
  1169                           	line	45
  1170                           	
  1171  01AA                     i1l1178:	
  1172  01AA  0872               	movf	(show@s),w
  1173  01AB  0084               	movwf	fsr0
  1174  01AC  120A  118A  2015   	fcall	stringdir
              120A  118A         
  1175  01B1  3800               	iorlw	0
  1176  01B2  1D03               	skipz
  1177  01B3  29B5               	goto	u10_21
  1178  01B4  29B6               	goto	u10_20
  1179  01B5                     u10_21:
  1180  01B5  2999               	goto	i1l1174
  1181  01B6                     u10_20:
  1182  01B6  29B7               	goto	i1l728
  1183                           	
  1184  01B7                     i1l727:	
  1185                           	line	49
  1186                           	
  1187  01B7                     i1l728:	
  1188  01B7  0008               	return
  1189                           	opt stack 0
  1190                           GLOBAL	__end_of_show
  1191  01B8                     	__end_of_show:
  1192 ;; =============== function _show ends ============
  1193                           
  1194                           	signat	_show,4216
  1195                           	global	i1_cmd
  1196                           psect	text247,local,class=CODE,delta=2
  1197                           global __ptext247
  1198  0114                     __ptext247:
  1199                           
  1200 ;; *************** function i1_cmd *****************
  1201 ;; Defined at:
  1202 ;;		line 24 in file "lcd.h"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;  cmd             1    wreg     unsigned char 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  cmd             1    0[COMMON] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;		None               void
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, btemp+1
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       0       0       0       0
  1217 ;;      Locals:         1       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0
  1219 ;;      Totals:         1       0       0       0       0
  1220 ;;Total ram usage:        1 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; This function calls:
  1223 ;;		Nothing
  1224 ;; This function is called by:
  1225 ;;		_ser
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           psect	text247
  1229                           	file	"lcd.h"
  1230                           	line	24
  1231                           	global	__size_ofi1_cmd
  1232  0030                     	__size_ofi1_cmd	equ	__end_ofi1_cmd-i1_cmd
  1233                           	
  1234  0114                     i1_cmd:	
  1235                           	opt	stack 4
  1236                           ; Regs used in i1_cmd: [wreg+status,2+btemp+1]
  1237                           ;i1cmd@a stored from wreg
  1238  0114  00F0               	movwf	(i1cmd@a)
  1239                           	line	25
  1240                           	
  1241  0115                     i1l2086:	
  1242                           ;lcd.h: 25: PORTD=a;
  1243  0115  0870               	movf	(i1cmd@a),w
  1244  0116  1283               	bcf	status, 5	;RP0=0, select bank0
  1245  0117  1303               	bcf	status, 6	;RP1=0, select bank0
  1246  0118  0088               	movwf	(8)	;volatile
  1247                           	line	26
  1248                           	
  1249  0119                     i1l2088:	
  1250                           ;lcd.h: 26: RC0=0;
  1251  0119  1007               	bcf	(56/8),(56)&7
  1252                           	line	27
  1253                           	
  1254  011A                     i1l2090:	
  1255                           ;lcd.h: 27: RC1=0;
  1256  011A  1087               	bcf	(57/8),(57)&7
  1257                           	line	28
  1258                           	
  1259  011B                     i1l2092:	
  1260                           ;lcd.h: 28: RC2=1;
  1261  011B  1507               	bsf	(58/8),(58)&7
  1262                           	line	29
  1263                           	
  1264  011C                     i1l2094:	
  1265                           ;lcd.h: 29: for(i=0;i<1000;i++);
  1266  011C  01F9               	clrf	(_i)
  1267  011D  01FA               	clrf	(_i+1)
  1268                           	
  1269  011E                     i1l2096:	
  1270  011E  087A               	movf	(_i+1),w
  1271  011F  3A80               	xorlw	80h
  1272  0120  00FF               	movwf	btemp+1
  1273  0121  3083               	movlw	(high(03E8h))^80h
  1274  0122  027F               	subwf	btemp+1,w
  1275  0123  1D03               	skipz
  1276  0124  2927               	goto	u244_25
  1277  0125  30E8               	movlw	low(03E8h)
  1278  0126  0279               	subwf	(_i),w
  1279  0127                     u244_25:
  1280                           
  1281  0127  1C03               	skipc
  1282  0128  292A               	goto	u244_21
  1283  0129  292B               	goto	u244_20
  1284  012A                     u244_21:
  1285  012A  292D               	goto	i1l2100
  1286  012B                     u244_20:
  1287  012B  2940               	goto	i1l716
  1288                           	
  1289  012C                     i1l2098:	
  1290  012C  2940               	goto	i1l716
  1291                           	
  1292  012D                     i1l715:	
  1293                           	
  1294  012D                     i1l2100:	
  1295  012D  3001               	movlw	low(01h)
  1296  012E  07F9               	addwf	(_i),f
  1297  012F  1803               	skipnc
  1298  0130  0AFA               	incf	(_i+1),f
  1299  0131  3000               	movlw	high(01h)
  1300  0132  07FA               	addwf	(_i+1),f
  1301                           	
  1302  0133                     i1l2102:	
  1303  0133  087A               	movf	(_i+1),w
  1304  0134  3A80               	xorlw	80h
  1305  0135  00FF               	movwf	btemp+1
  1306  0136  3083               	movlw	(high(03E8h))^80h
  1307  0137  027F               	subwf	btemp+1,w
  1308  0138  1D03               	skipz
  1309  0139  293C               	goto	u245_25
  1310  013A  30E8               	movlw	low(03E8h)
  1311  013B  0279               	subwf	(_i),w
  1312  013C                     u245_25:
  1313                           
  1314  013C  1C03               	skipc
  1315  013D  293F               	goto	u245_21
  1316  013E  2940               	goto	u245_20
  1317  013F                     u245_21:
  1318  013F  292D               	goto	i1l2100
  1319  0140                     u245_20:
  1320                           	
  1321  0140                     i1l716:	
  1322                           	line	30
  1323                           ;lcd.h: 30: RC2=0;
  1324  0140  1283               	bcf	status, 5	;RP0=0, select bank0
  1325  0141  1303               	bcf	status, 6	;RP1=0, select bank0
  1326  0142  1107               	bcf	(58/8),(58)&7
  1327                           	line	31
  1328                           	
  1329  0143                     i1l717:	
  1330  0143  0008               	return
  1331                           	opt stack 0
  1332                           GLOBAL	__end_ofi1_cmd
  1333  0144                     	__end_ofi1_cmd:
  1334 ;; =============== function i1_cmd ends ============
  1335                           
  1336                           	signat	i1_cmd,88
  1337                           	global	_dat
  1338                           psect	text248,local,class=CODE,delta=2
  1339                           global __ptext248
  1340  0144                     __ptext248:
  1341                           
  1342 ;; *************** function _dat *****************
  1343 ;; Defined at:
  1344 ;;		line 34 in file "lcd.h"
  1345 ;; Parameters:    Size  Location     Type
  1346 ;;  b               1    wreg     unsigned char 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  b               1    0[COMMON] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;		None               void
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, btemp+1
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         0       0       0       0       0
  1359 ;;      Locals:         1       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0
  1361 ;;      Totals:         1       0       0       0       0
  1362 ;;Total ram usage:        1 bytes
  1363 ;; Hardware stack levels used:    1
  1364 ;; This function calls:
  1365 ;;		Nothing
  1366 ;; This function is called by:
  1367 ;;		_show
  1368 ;;		_ser
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           psect	text248
  1372                           	file	"lcd.h"
  1373                           	line	34
  1374                           	global	__size_of_dat
  1375  0030                     	__size_of_dat	equ	__end_of_dat-_dat
  1376                           	
  1377  0144                     _dat:	
  1378                           	opt	stack 4
  1379                           ; Regs used in _dat: [wreg+status,2+btemp+1]
  1380                           ;dat@b stored from wreg
  1381  0144  00F0               	movwf	(dat@b)
  1382                           	line	35
  1383                           	
  1384  0145                     i1l1154:	
  1385                           ;lcd.h: 35: PORTD=b;
  1386  0145  0870               	movf	(dat@b),w
  1387  0146  1283               	bcf	status, 5	;RP0=0, select bank0
  1388  0147  1303               	bcf	status, 6	;RP1=0, select bank0
  1389  0148  0088               	movwf	(8)	;volatile
  1390                           	line	36
  1391                           	
  1392  0149                     i1l1156:	
  1393                           ;lcd.h: 36: RC0=1;
  1394  0149  1407               	bsf	(56/8),(56)&7
  1395                           	line	37
  1396                           	
  1397  014A                     i1l1158:	
  1398                           ;lcd.h: 37: RC1=0;
  1399  014A  1087               	bcf	(57/8),(57)&7
  1400                           	line	38
  1401                           	
  1402  014B                     i1l1160:	
  1403                           ;lcd.h: 38: RC2=1;
  1404  014B  1507               	bsf	(58/8),(58)&7
  1405                           	line	39
  1406                           	
  1407  014C                     i1l1162:	
  1408                           ;lcd.h: 39: for(i=0;i<1000;i++);
  1409  014C  01F9               	clrf	(_i)
  1410  014D  01FA               	clrf	(_i+1)
  1411                           	
  1412  014E                     i1l1164:	
  1413  014E  087A               	movf	(_i+1),w
  1414  014F  3A80               	xorlw	80h
  1415  0150  00FF               	movwf	btemp+1
  1416  0151  3083               	movlw	(high(03E8h))^80h
  1417  0152  027F               	subwf	btemp+1,w
  1418  0153  1D03               	skipz
  1419  0154  2957               	goto	u8_25
  1420  0155  30E8               	movlw	low(03E8h)
  1421  0156  0279               	subwf	(_i),w
  1422  0157                     u8_25:
  1423                           
  1424  0157  1C03               	skipc
  1425  0158  295A               	goto	u8_21
  1426  0159  295B               	goto	u8_20
  1427  015A                     u8_21:
  1428  015A  295D               	goto	i1l1168
  1429  015B                     u8_20:
  1430  015B  2970               	goto	i1l721
  1431                           	
  1432  015C                     i1l1166:	
  1433  015C  2970               	goto	i1l721
  1434                           	
  1435  015D                     i1l720:	
  1436                           	
  1437  015D                     i1l1168:	
  1438  015D  3001               	movlw	low(01h)
  1439  015E  07F9               	addwf	(_i),f
  1440  015F  1803               	skipnc
  1441  0160  0AFA               	incf	(_i+1),f
  1442  0161  3000               	movlw	high(01h)
  1443  0162  07FA               	addwf	(_i+1),f
  1444                           	
  1445  0163                     i1l1170:	
  1446  0163  087A               	movf	(_i+1),w
  1447  0164  3A80               	xorlw	80h
  1448  0165  00FF               	movwf	btemp+1
  1449  0166  3083               	movlw	(high(03E8h))^80h
  1450  0167  027F               	subwf	btemp+1,w
  1451  0168  1D03               	skipz
  1452  0169  296C               	goto	u9_25
  1453  016A  30E8               	movlw	low(03E8h)
  1454  016B  0279               	subwf	(_i),w
  1455  016C                     u9_25:
  1456                           
  1457  016C  1C03               	skipc
  1458  016D  296F               	goto	u9_21
  1459  016E  2970               	goto	u9_20
  1460  016F                     u9_21:
  1461  016F  295D               	goto	i1l1168
  1462  0170                     u9_20:
  1463                           	
  1464  0170                     i1l721:	
  1465                           	line	40
  1466                           ;lcd.h: 40: RC2=0;
  1467  0170  1283               	bcf	status, 5	;RP0=0, select bank0
  1468  0171  1303               	bcf	status, 6	;RP1=0, select bank0
  1469  0172  1107               	bcf	(58/8),(58)&7
  1470                           	line	41
  1471                           	
  1472  0173                     i1l722:	
  1473  0173  0008               	return
  1474                           	opt stack 0
  1475                           GLOBAL	__end_of_dat
  1476  0174                     	__end_of_dat:
  1477 ;; =============== function _dat ends ============
  1478                           
  1479                           	signat	_dat,4216
  1480                           	global	_tx
  1481                           psect	text249,local,class=CODE,delta=2
  1482                           global __ptext249
  1483  01D4                     __ptext249:
  1484                           
  1485 ;; *************** function _tx *****************
  1486 ;; Defined at:
  1487 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.81\include\serial.h"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  dat             1    wreg     unsigned char 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  dat             1    0[COMMON] unsigned char 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;		None               void
  1494 ;; Registers used:
  1495 ;;		wreg
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1501 ;;      Params:         0       0       0       0       0
  1502 ;;      Locals:         1       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0
  1504 ;;      Totals:         1       0       0       0       0
  1505 ;;Total ram usage:        1 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_ser
  1511 ;;		_tx_string
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           psect	text249
  1515                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.81\include\serial.h"
  1516                           	line	16
  1517                           	global	__size_of_tx
  1518  000C                     	__size_of_tx	equ	__end_of_tx-_tx
  1519                           	
  1520  01D4                     _tx:	
  1521                           	opt	stack 4
  1522                           ; Regs used in _tx: [wreg]
  1523                           ;tx@dat stored from wreg
  1524  01D4  00F0               	movwf	(tx@dat)
  1525                           	line	17
  1526                           	
  1527  01D5                     i1l1120:	
  1528                           ;serial.h: 17: TXREG=dat;
  1529  01D5  0870               	movf	(tx@dat),w
  1530  01D6  1283               	bcf	status, 5	;RP0=0, select bank0
  1531  01D7  1303               	bcf	status, 6	;RP1=0, select bank0
  1532  01D8  0099               	movwf	(25)	;volatile
  1533                           	line	18
  1534                           ;serial.h: 18: while(!TXIF);
  1535  01D9  29DA               	goto	i1l694
  1536                           	
  1537  01DA                     i1l695:	
  1538                           	
  1539  01DA                     i1l694:	
  1540  01DA  1E0C               	btfss	(100/8),(100)&7
  1541  01DB  29DD               	goto	u3_21
  1542  01DC  29DE               	goto	u3_20
  1543  01DD                     u3_21:
  1544  01DD  29DA               	goto	i1l694
  1545  01DE                     u3_20:
  1546  01DE  29DF               	goto	i1l697
  1547                           	
  1548  01DF                     i1l696:	
  1549                           	line	19
  1550                           	
  1551  01DF                     i1l697:	
  1552  01DF  0008               	return
  1553                           	opt stack 0
  1554                           GLOBAL	__end_of_tx
  1555  01E0                     	__end_of_tx:
  1556 ;; =============== function _tx ends ============
  1557                           
  1558                           	signat	_tx,4216
  1559                           psect	text250,local,class=CODE,delta=2
  1560                           global __ptext250
  1561  0000                     __ptext250:
  1562                           	global	btemp
  1563  007E                     	btemp set 07Eh
  1564                           
  1565                           	DABS	1,126,2	;btemp
  1566                           	global	wtemp0
  1567  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Sun Mar 17 13:02:46 2024

                   _i 0079                     _z 007B                     pc 0002                    _tx 01D4  
                  fsr 0004                   l712 00E3                   l715 00FD                   l731 018C  
                 l716 0110                   l732 0193                   ?_tx 0070                   l717 0113  
                 l733 0194                   l734 0194                   l691 01D3                   _RC0 0038  
                 _RC1 0039                   _RC2 003A                   _dat 0144                   _cmd 00E4  
                 _ser 0035                   fsr0 0004                  ??_tx 0070                  l2030 01B8  
                l2110 0177                  l2032 01C5                  l2040 00EA                  l2104 00AA  
                l2112 017D                  l2034 01CF                  l2050 00FD                  l2042 00EB  
                l2106 00CB                  l2114 0181                  l2052 0103                  l2044 00EC  
                l2036 00E7                  l2116 0186                  l2108 0174                  l2046 00EE  
                l2038 00E9                  l2118 018C                  ?_dat 0070                  l2048 00FC  
                ?_cmd 0070                  ?_ser 0070                  STR_1 001B                  STR_2 002C  
                u2360 01C2                  u2361 01BE                  u2380 00FB                  u2460 00B4  
                u2381 00FA                  u2461 00B0                  u2374 01C5                  u2390 0110  
                u2470 00BE                  u2391 010F                  u2471 00BA                  _PIE1 008C  
                u2480 00C8                  u2385 00F7                  u2481 00C4                  u2474 00B7  
                u2395 010C                  u2484 00C1                  u2494 00CB                  _RCIF 0065  
                _TXIF 0064                  u3_20 01DE                  u3_21 01DD                  u8_20 015B  
                u8_21 015A                  u8_25 0157                  u9_20 0170                  u9_21 016F  
                u9_25 016C                  dat@b 0070                  cmd@a 0020                  _main 0174  
                _show 0197                  btemp 007E                  ser@a 0078                  start 0012  
               ??_dat 0070                 ??_cmd 0020                 ??_ser 0073                 ?_main 0070  
               ?_show 0070                 i1l720 015D                 i1l721 0170                 i1l722 0173  
               i1l715 012D                 i1l716 0140                 i1l740 009D                 i1l717 0143  
               i1l725 01AA                 i1l741 009D                 i1l726 0199                 i1l727 01B7  
               i1l728 01B7                 i1l737 0070                 i1l738 0080                 i1l739 008D  
               i1l694 01DA                 i1l695 01DA                 i1l696 01DF                 i1l697 01DF  
               _RCREG 001A                 u10_20 01B6                 u10_21 01B5                 _RCSTA 0018  
               _SPBRG 0099                 _PORTD 0008                 _TRISD 0088                 i1_cmd 0114  
               _TXREG 0019                 _TXSTA 0098                 pclath 000A                 tx@dat 0070  
               show@s 0072                 status 0003                 wtemp0 007E          __end_of_main 0197  
        __end_of_show 01B8                ??_main 0021                ??_show 0071                ?i1_cmd 0070  
              i1l1120 01D5                i1l2100 012D                i1l2102 0133                i1l1160 014B  
              i1l1170 0163                i1l1162 014C                i1l1154 0145                i1l1164 014E  
              i1l1156 0149                i1l1172 0198                i1l2060 0045                i1l1166 015C  
              i1l1158 014A                i1l1174 0199                i1l2070 0063                i1l2062 004B  
              i1l2054 0035                i1l1168 015D                i1l1176 01A5                i1l2080 0082  
              i1l2072 0065                i1l2064 0051                i1l2056 0039                i1l2090 011A  
              i1l1178 01AA                i1l2082 008C                i1l2074 006F                i1l2066 0057  
              i1l2058 003F                i1l2092 011B                i1l2084 008D                i1l2076 0070  
              i1l2068 005D                i1l2094 011C                i1l2086 0115                i1l2078 0080  
              i1l2096 011E                i1l2088 0119                i1l2098 012C                u240_20 006E  
              u240_21 006D                u241_20 007F                _INTCON 000B                u241_21 007E  
              u242_20 008B                u242_21 008A                u243_20 009C                u243_21 009B  
              u244_20 012B                u244_21 012A                u244_25 0127                u245_20 0140  
              u245_21 013F                u245_25 013C                _TRISC0 0438                _TRISC1 0439  
              _TRISC2 043A                _TRISC6 043E                _TRISC7 043F                i1cmd@a 0070  
        ?_serial_init 0070      __end_of_lcd_init 00E4                saved_w 007E         __end_ofi1_cmd 0144  
      __pcstackCOMMON 0070            __end_of_tx 01E0               ??i1_cmd 0070            __pmaintext 0174  
          __pintentry 0004             ?_lcd_init 0070  __size_of_serial_init 001C          __size_of_dat 0030  
        __size_of_cmd 0030          __size_of_ser 0075            ??_lcd_init 0021  end_of_initialization 01E4  
 start_initialization 01E0           __end_of_dat 0174           __end_of_cmd 0114           __end_of_ser 00AA  
         __pbssCOMMON 0079         __pcstackBANK0 0020     __size_of_lcd_init 003A             __ptext241 0000  
           __ptext250 0000             __ptext242 00AA             __ptext243 00E4             __ptext244 01B8  
           __ptext245 0035             __ptext246 0197             __ptext247 0114             __ptext248 0144  
           __ptext249 01D4             __pstrings 0015        __size_ofi1_cmd 0030           __size_of_tx 000C  
   interrupt_function 0004         ??_serial_init 0020           __stringbase 001A   __end_of_serial_init 01D4  
            _lcd_init 00AA         __size_of_main 0023         __size_of_show 0021              intlevel1 0000  
           stringcode 0015           _serial_init 01B8              stringdir 0015              stringtab 0015  
